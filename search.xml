<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[直通车与PPC]]></title>
    <url>%2F%E8%90%A5%E9%94%80%2F%E7%9B%B4%E9%80%9A%E8%BD%A6%2F</url>
    <content type="text"><![CDATA[直通车是目前很多店铺重要流量来源渠道之一，但是呢很多中小卖家以及第一次接触直通车的卖家对于直通车有非常多的问题，那么今天就针对大家比较想知道的一系列问题做出一个整理以及解答，让大家可以了解一定的基础原理，在开车的过程中不会出现大的问题。一：认识直通车 1.对于中小卖家而言直通车是否完全是盈利工具？ 答：对于中小卖家而言，如果产品并不是非常有竞争力，直通车承担的更多的是引流工具，给单品和店铺带来收藏和购物车。这些客户并不一定是从直接的数据层面表现出成交，更多带来的是给店铺后续的销售提升。我们通常控制直通车费是按照店铺的销售额的百分比，比如我们店铺的直通车费用控制额度在15%左右的车费，这个算法是根据店铺毛利率、退货率、人力成本等数据核算出每个店铺最优质的推广费用占比。 2.产品对于直通车的影响到底有多大？ 答： 直通车仅仅是引流工具，最终还是需要回归到产品的本身，比如产品的拍照、款式、评价都会影响到产品的转化率数据，建议各位从源头把控产品，产品为王的思路直通车辅助引流，这样店铺才会更好的往前发展。 3.同一个ip多次点击如何扣费？ 答：这个问题是很多卖家担心同行恶意点击花费自己的车费很担心的问题，直通车有无效点击过滤系统，系统会结合30多项综合参数（比如ip地址，物理地址，cookies，点击时段，买家购买意向等等）判断点击的有效性，无效点击会进行过滤并且不会产生花费，请卖家放心使用，系统过滤时间大约是1个小时，多关注后台的数据情况，具体准确扣费需要第二天查看直通车报表。二：展现量 1.推广的宝贝没有展现量，怎么办？ 答：推广的宝贝没有展现量，主要是直通车各个流量入口没能获得展现或点击： 关键词方面：关键词是展现量的大头！ ①关键词的选择，热门词与长尾词的流量层级不同，特别的长尾词可能无流量。 ②关键词的数量，过少的关键词，犹如一个没有入口的店铺一般，无法多方位的引入流量。 ③关键词出价较低，导致关键词的综合排名靠后，质量得分高的关键词可以适当的抬高价格；建议通过后台的实时排名工具，了解该词的参考出价，再结合实时排名，调整出价。 其它流量入口的使用：定向推广等。 2.新账户测款多关键词出价没有展现应该怎么办？ A：对于新账户因为计划权重比较低，通常我是限额的方式拿展现，比如单个计划限额200，每天不管出价多高一定要把钱花出去来跑数据，先拿到展现才能判断款式的点击率数据。新账户通常因为不敢出价导致数据跑不出来，建议先跑数据然后分析数据。 3.为什么我设置了直通车推广实时排名第一，但是为什么找不到宝贝展现？ 答：目前直通车会根据流量的实时性特征来匹配对应适合的宝贝，我们所看到的推广第一位的商品可能会不同，请过一个小时查看过去一段时间排名情况，是否有来自推广首位的流量来确认。另外同时请查看您设置的创意图是否和宝贝主图一致，若是自然搜索排名比较靠前，且直通车排名靠前，由于创意图片和宝贝主图一致，可能会有去重的情况，建议添加和主图不同的创意同时推广，避免损失展现。三：点击率 1：点击率对直通车权重有影响吗？ 答：目前直通车改版没有直通车账户权重，现在是计划权重，每一个计划都有独立的权重，而我们的点击率的数据是直接影响到我们的计划权重，如果需要提升计划的权重可以通过高点击率图片的款来拉升计划的权重分值。 2.直通车点击率提升不上去怎么办？ 答：直通车点击率是影响质量分以及扣费的重要因素，那么如果一个直通车的点击率一直提升不上去的话，同时在关键词展现没有问题的情况下，更换创意图，图是直接影响点击的重要因素。可以在初期的时候就做7.8张图，便于后期更换创意图。四：转化率 1.零销量的产品可以投直通车吗？ 答：从转化的角度来看，零销量的宝贝转化率相对偏低，这个时候投放直通车，会显得“烧钱”；但是，从店铺运营的角度来看，一个新宝贝能成长起来，很重要的一个因素是“人气”，也就是说，新宝贝上架之后，提高其浏览量，对宝贝提高人气，获取免费流量，是有一定好处的；因此，如果店铺的推广资金相对宽裕，建议零销量的宝贝可以投放直通车提高人气；反之，则不建议！！！ 2.有点击，没有转化啊！是什么问题呢？ 答：首先，直通车方面建议通过直通车报表查看关键词的转化和收藏加购的数据，效果较好的关键词可以重点推广，也可以添加和宝贝精准度较高的关键词；其次，宝贝描述页面是促成买家成交的重要因素，建议您参考下面的方法进行优化：1、添加更多宝贝实物图和细节图；2、做好关联销售，提高买家在店铺的停留时间；3、尽量详细的介绍该宝贝的相关说明；4、买家好评截图放在宝贝描述页面五：直通车优化 1.质量得分如何提升？ 答：质量得分影响因素： （1）创意质量：推广创意近期的关键词动态点击反馈 （2）相关性：关键词与宝贝类目、属性及文本等信息的相符程度 （3）买家体验：根据买家在店铺的购买体验和账户近期的关键词推广效果给出的动态得分, 建议先看下质量得分低是哪项偏低，再进行针对性调整。如果都有差距，建议首先可以通过创意图片的差异化来提升图片的点击率从而提高关键词的质量得分。 影响质量得分的要素有哪些？ A：影响质量得分的分三方面：创意质量、买家体验、相关性，对应的是你的产品的点击率、转化率、以及相关性，名字叫淘宝开店扣扣群号是:五七四九七九八四零我更多的时候不会直接关注产品的质量得分，我会优化整体的单品的点击率，通过优化词的方式来逐步提升单品的点击率数据。重点放在创意图片的测试方面。 2.直通车精准计划如何做？ 答：我的精准计划和广泛计划的区别在于关键词的用法，精准计划更多的时候用的是系统推荐词，因为系统推荐词是根据产品的标题和属性来推荐，只要计划的权重高，推荐的关键词通常比较优质。 3.优化关键词的频率该如何把控？ A：建议优化关键词的频率控制到每周1-2次，因为我们需要给关键词一段的测试周期，如果优化过于频繁会损失一部分关键词的流量的机会。如果优化的时间太久会让账户一部分非优质关键词影响到直通车账户。 4.关键词的匹配是精准匹配好还是广泛匹配好？ 答：我个人推荐广泛匹配，因为真正的精准并不表现在关键词，而是关键词背后的精准的人群，也就是为什么我们要分析我们店铺产品的客户人群的特征，比如年龄、性别、客单价、风格等等，这些都有利于我们针对我们优质的客户人群做直通车溢价，回归产品来优化直通车的人群思路。 直通车是一个辅助引流的工具能够为店铺增加流量，甚至可以在一定程度上提升转化，但是转化还是看产品，整理出的一些问题希望能对刚接触的卖家有一定的帮助。 ##PPC## 今天和大家讲讲直通车里非常重要的一块——PPC。 讲这个之前，先给大家提个问题：各位开直通车的目的是什么？ 为什么会问这个问题，因为在开直通车时，很多人并没有很明确的目的，可能只有一个很模糊的想法：想拉流量，想增加搜索...各阶段的目的不同，导致了各阶段所要达到的要求也不同。 只有明确了开车的每一步目的，才能不翻车。 开直通车，PPC和ROI是无法避开的两项重要数据。 PPC就是单次点击扣费，直接关系到直通车的花费，最理想的状态当然是以较低的PPC引入大量精准的流量。 还是老规矩，想降PPC，我们要先分析PPC的公式。 PPC=下一家出价*下一家质量分/自己质量分+0.01 这个公式其实很好理解，分子不是我们能控制的，这个公式里我们可以控制的唯一变量就是自己的质量分。 现在问题清楚了很多，提高质量分，基本就能降低PPC。 其实不用我说，大家也都知道想开好车，就要提高质量分。 所以我们继续分析影响质量分的三大因素。相关性和买家体验就不细说了，这里就说一个提高相关性的小技巧——全标题覆盖。我们宝贝正常有20个词根，排列组合基本可以覆盖我们想要推广的所有关键词。 我们主要分析的是创意质量，官方解释是关键词的动态点击反馈，转化成数据指标，是点击量还是点击率呢？这里告诉大家，点击率的影响更大。 那么这里可以推导给大家一个逻辑关系：随着点击量的增加，点击率提高，PPC是逐步减少的。这是很多老车手得出的经验，大家可以放心用。 接着就来讲点击率，大家思考下影响点击率的因素有哪些？ **1.车图** 主图的好坏，是否吸引眼球，直接决定买家有没有点开的欲望，一个合格车图的制作足可以单独讲一篇，这里给大家总结一下：白底图，场景图，卖点文案，拼色或者视觉冲突，还可以设计一些与众不同，突出与同行的差异等等。车图设计出来还要测图，筛选出合格的车图，合格的标准是什么，与行业的点击率均值比较，低于均值肯定是不合格的。 当点击率达到行业均值两倍时，上分就变得很容易了。 **2.人群** 试想一下，产品展现给精准人群和广泛人群，哪个点击率会更高？毫无疑问，当然是与产品，店铺标签匹配的人群点击率更高，因为他们有更高的购买需求。 **3.地域和时间折扣** 这点就要因人而异，因品而异，可以在生意参谋里看到自己店铺购买人群的地域分布，勾选排名靠前的省市。时间折扣怎么设？千万不能凭经验和猜！需要分析店铺的订单时间来设计，这里就不多讲，可以关注我看后面更新。 **4.关键词排名** 关键词的排名，首条的点击率相比后几条肯定高，相对的费用也更高，加价卡首条是简单粗暴拉升点击率的办法，如果首条价格不高，建议出到首条，如果首条价格过高，那么就放到前三位置。 那朋友们要问了，这跟我们降低PPC的初衷不是正好矛盾吗，其实很好理解，比如你想追求一个人，肯定要把自己收拾好，提升自身魅力，这就是选好的车图。前期，肯定送礼物，请吃饭，不能刚见面就想着怎么省钱，当你们相处好之后，后期花费自然而然就降下来了。 这里再讲两个开直通车必须要具备的思维——整体思维和目的导向。 1.直通车的各项数据都会相互作用相互影响，不可能单独剥离出某一样来讨论。所以我们要有整体思维，为了达成一个长期目标要正确的看待前期的准备。 2.目的导向则是每个阶段要为每个阶段的目标服务，不能既想着引流又想拉ROI，每个阶段的目的要明确。 说完点击率，我们接着分析PPC的另一大影响因素——关键词的选择。 不同的关键词基本出价也不同，所以选好关键词非常重要！ 选关键词也有很多方法，这里教大家一个侧重PPC的选词方法。 首先，我们先选出一批关键词，可以在生意参谋的选词助手，或者直通车的宝贝推词选择。再结合自己主推的核心词进行扩展，接着我们将选好的关键词建表格，从四个方面对其进行排序 1.关建词展现指数 2. 关建词行业平均点击率 3. 关建词首条出价 4. 关建词初始质量分。 选择关建词展现指数较高的，关建词点击率高于行业平均点击率的，关建词首条出价较低的，初始质量分较高的。综合这四个维度，选择出最优的关建词。 PS：当点击量提高，点击率逐步上升，超过行业均值且趋于稳定之后，就可以缓缓调低PPC，这里要注意，不要批量的按百分比降PPC，而是要根据展现量，转化率，一个一个去调。每次调整不超过5%，一天调整次数不超过两次。 总结：想要降低PPC，最健康合理的方法：从整体考虑，提升点击率；做好内功，选出合格车图；利用数据排序，筛选优质关键词。]]></content>
      <categories>
        <category>营销</category>
      </categories>
      <tags>
        <tag>淘宝店铺 运营 直通车 PPC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[直通车与钻展]]></title>
    <url>%2F%E8%90%A5%E9%94%80%2F%E7%9B%B4%E9%80%9A%E8%BD%A6%E4%B8%8E%E9%92%BB%E5%B1%95%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[##1.直通车与钻展的区别## &gt;直通车和钻展都是通过广告位展示的形式来展现店铺要推广的宝贝，二者的不同之外还现在以下几点： **一、展示位置不同：** 直通车是电脑端淘宝搜索进去之后 ，产品展示页面最右边一栏，和最下边一栏的位置 ； 钻展显示位置相对就更多了，有淘宝首页轮播（焦点图）、右侧大图、右侧小图、底部 通栏排列的小图、淘宝垂直频道、分类页里面的焦点图，甚至淘宝站外平台的广告位、 弹窗广告位等等 。 **二、收费方式不同：** 两者第一个区别就是收费方式，直通车是免费 展示而按照点击收费的，一个独立的IP点击一次，就会扣费一次。而钻展是按照展示 收费的，即广告所在的页面展示在用户面前一次就计费一次。而且综合了质量分和排 位的关系，直通车的质量分提高了，点击单价就下降，而钻展是点击率越高，点击单 价就越低。有些大型卖家店铺，钻展一天可以投放10多万元，而直通车一天能够消耗 几万元是很少见的，所以直接导致很多中小卖家只是做直通车而不做钻展推广。 **三、适合卖家：** 直通车很考验一家店铺卖主的运营水平，需要对目标客户有了解，做到精 准投放，优化关键词，流量转化，直通车比较受中小卖家的欢迎。上篇文章一介绍钻 展适合哪些卖家，概括来讲钻展操作性比较简单，店铺一定要在自己预算上有优势并 且有专业美工人才。还有就是搞大型活动的时候适合用钻展，因为钻展不需要任何的 时间周期，效果反应快速，有实力的大中型卖家倾向于玩钻展。 **四、投放效益：** 直通车是有针对性的投放，能够精准的找到目标群体，避免无效点击流量。而钻展属 于广泛的群体推广，覆盖面广，有时候有一千个人看到你的商品展示，但可能连一个 转化量也没有，单从投放成本和效益来看，钻展的性价比是低于直通车的。五、图片 要求不同：特别强调图片这一细节真的很有必要，直通车是按照商品的形式展现在页 面搜索页的右侧和最下方，直通车更看重的标题，即使图片要求不高买家购买欲也相 对高些。但是钻展不行，钻展取决于图片创意，对图片要求非常高，图片没有吸引力 买家也不可能点击，没有点击就没有转化。尤其是出现在淘宝首页的广告位的图片， 都是要求一级创意图的，如果一家店铺的美工技术不够好，做出的图片就有可能无法 通过钻展的审核。 ![1](/images/062701) 在很多时候，直通车和钻展又是相辅相成、相得益彰的关系，比如直通车开车是有流量 天花板的，搭配钻展推广能获得更大流量和更高转化，在推广店铺与产品过程中，卖家 要根据实际情况，搭配选择直通车与钻展两种推广方式。 **一、钻展和直通车的区别，什么样的店铺适合玩钻展？** 这里我首先总结了一下两者的不同之处，这样才能更好的说明，到底什么样的店铺适合什 么样的推广布局。对于大部分小类目店铺，因为产品适用人群较少，建议直通车即可，钻 展没有必要做拉新投放，而对于大类目的中大型店铺，建议直钻结合是很好的提升方式。 对于性价比爆款型店铺，以直通车为主。对于客单价偏高，全店动销型店铺，建议以钻展 为主。 ![1](/images/062702) **二、钻展不同目标下的不同策略** 根据不同的营销节点定营销策略，主要是日常销售和大促期间之差别。 如果根据产品的销售淡旺季划分，主要是几个特殊时期的投放策略不同。 ![1](/images/062703) **1、日常销售策略** 如果预算有限，日常销售建议少分配预算，大部分预算花在聚划算和淘抢购活动时候。日常计划可以分为【拉新计划】【转化计划】【老客户计划】。不同计划关注点不同。【拉新计划】主要关注cpc和点击率是否合适，预算分配是否合理，因为是新客户，转化效果不会太好，但从全店来看，拉新有利于提升全店销售额和老客户数量，还要手淘首页和淘内免费其他流量。 【转化计划】主要定向近期浏览、收藏、加购人群，关注点击回报率。由于是认知人群，转化较高，但人群有限，而且会有重复展现的情况，投入一定预算争取覆盖更多人即可，不用过多分配预算。 【老客户计划】主要针对是回购率高的类目，如果是部分回购率较低的产品，可以不用投放，专注拉新即可。老客户计划建议根据产品的回购周期，结合营销场景定向或者达摩盘定向，做到最合适的时候用合适利益点召回老顾客。 ![1](/images/062704) ![1](/images/062705) **2、大促投放策略** 大促期间的投放，一定要把握好投放节奏，因为客户是分层的，大促当天的竞争激烈，导致了cpm很高，如果不提前做好准备工作，临时抱佛脚效果往往不好。先提前几天按照活动计划作出对应的推广计划，前期最重要的是测图，此时cpm还是可控的，测图之后配合访客定向和达摩盘等大范围圈人拉新。预热期和活动当天是转化效果最好的时候，经过蓄水期的投放之后， 一方面整理蓄水期报表数据，主要看定向效果和创意效果。因为大促前转化率较低，此时考核数据应该以点击率，单个收藏成本，单个加购成本，收藏率，加购率等数据进行考核。为进一步投放提供指导，方便更好的控制预算。另一方面，用营销场景定向对蓄水期客户进行二次定向，收割成交。 **三、想做好钻展需要做好哪些方面（依重要程度排序）** **1、全店产品布局** 首先做好产品布局，对投产比影响较大，因为钻展点击来的访客，没有明确的购物意图，只是对广告图片有兴趣逛逛，因此创意除了考虑点击率之外，与店铺风格和目标人群的一致性也要考虑。全店产品布局合理，风格统一的话，会大大提高访客浏览深度和转化率。 **2、创意** 前期的测图很重要，因为cpm竞价情况下，点击率越高，点击单价越低。测试创意可以分别从品牌，产品，利益点，构图，创意等角度做一批差异较大的图，测试出点击率较高图片继续投放。如果定向人群较少，一张图片是有视觉疲劳周期的，效果不好时要及时更换。 如果以品牌宣传为目的的创意呢。一定要和品牌其他渠道的宣传统一起来，保持完整的识别度高的视觉系统对于塑造品牌至关重要。经典案例如：阿芙精油，慕思床垫，小黄鸭等等。他们的策略是每隔一段时间，就大力曝光一次。持续的宣传品牌视觉系统，把品牌符号慢慢的印在消费者心中。 **3、定向** 目前常用的定向有智能定向，访客定向，营销场景定向，相似宝贝定向，兴趣点定向，达摩盘定向这几种，通投，群体，行业店铺定向不太常用。预算有限的情况下， 先选人群较少，较精准的定向，预算较多的可以尝试更大范围定向，然后根据投放效果再优化定向人群。此时要注意一下定向人群和创意的一致性问题，不同人群感兴趣的地方也不一样，所以会出现同个创意不同人群点击率差别较大的情况。所以建立计划和单元的时候，尽量维持单一变量原则，方便后面数据分析时，能更好的优化。 **4、出价** 一般的投放目标，就根据平均出价上下浮动20%左右，阶梯型测试观察最合理出价。如果是单纯的低价引流，则不必这样测试，可以在竞争少的时候投放，还可以低出价，大范围人群的方法来玩。这里提醒点击单价并不是越低越好，因为出价高低还决定了流量的质量问题。 **5、计划设置，预算把控，投放节奏把控** 因为目前可以复制计划，建议不同的目标建立不同的计划，不同的定向方式建立不同的单元，尽量保证所有数据可以追踪和优化即可。预算的把控，也是很重要的，根据报表，我们可以判断哪些地域，哪个时间段，哪个资源位，哪种定向，哪种创意效果较好。根据数据合理的分配预算，才能更好的达成营销目标。投放节奏的把控建议要把握好平台促销节奏，和店铺自己的促销节奏，还有产品的淡旺季来合理控制预算分配。综合考虑全店的目标，不要单纯看钻展。 **6、cpm和cpc选择** CPM出价 = CPC出价 x 预估CTR x 1000 cpc单价更可控一些，适合拉新投放，缺点是竞争大的时候不容易获取流量。cpm流量更好控制一些。Cpc想获得大流量，创意的预估点击率至关重要，必须做好预估点击率。 **7、落地页说明** 这里重点说一下淘积木。因为单品投放直接落地详情页，活动投放大部分是落地活动页或者店铺首页。还有一种就是目前比较智能的淘积木，就是可以自己用模板做出的落地页，有一点好处就是系统千人千面的计算宝贝的排名顺序，这样浏览深度和转化率会提升很多，自己做淘积木的时候，建议把利益点放上面，宝贝陈列把爆款宝贝拍前面几个，后面让系统智能排序。 **四、关于钻展的一些经验心得** 深刻的认识到，一个店铺的成功，绝不是做好一个点就可以的，都是要有完整的商业逻辑在里面。学好搜索，直通车，钻展，淘客这些推广手段有很大的帮助，但是如果脱离了产品，市场分析，基础优化这些，绝对不会有良好的结果。]]></content>
      <categories>
        <category>营销</category>
      </categories>
      <tags>
        <tag>淘宝店铺 运营</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CPM CPC CPA全面解析]]></title>
    <url>%2F%E5%95%86%E4%B8%9A%E5%8C%96PM%2FCPM%20CPC%20CPA%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[##CPM(cost per mile): 千人展现成本## 这是权衡广告效果的一种基本形式（不管是传统媒体还是网络媒体），广告每展现给一千个人所需花费的成本。按照CPM计费模式的广告，只看展现量，按展现量收费，不管点击、下载、注册什么的。一般情况下，网络广告中，视屏贴片、门户banner等非常优秀的广告位通常采用CPM收费，百度的网盟就是用CPM收费方式，还有淘宝的钻展是以banner为主的CPM收费方式，微信盆友圈李的第五条广告投放同样也是CPM收费。 那么，广告主如何知道展示了多少次呢？在网络媒体广告中，一般由两种方法获得数据：1.所投放的媒介提供的数据，或者媒体为广告主开一个后台账号，广告主可以在数据后台看到广告展现了多少次，数据来源为该媒介广告也买你的点击量PV，产生一个点击，默认展现一次广告；2.因为被投放广告的媒介处于利益相关方中，为了获得比较客观的数据，广告主一般采用第三方监测机构数据。即由第三方检测机构在投方的广告中放置监测代码，来检测广告的展现 点击等数据。第三方监测机构收集到投放的数据，整理后提供给广告主，此数据为广告主 代理商 媒介三方承认。。 目前，国内网络广告第三方监测公司有秒针 admaste Double Click等 有的广告主想要打开知名度，或者因为媒介转化率较高，所以采用CPM的方式比价划算。 ##CPC（cost per click）:点击成本，没产生一次点击所花费的成本## 有的广告主需要将广告效果精准到点击，只有点击了，对于广告主才是有价格的，这样的方法加上点击率限制可以加强作弊的难度，而且是宣传的最优方式。 现在的网络广告中，典型的按点击收费的模式就是搜索引擎的竞价排名，如谷歌 百度 360 搜狗的竞价排名。在CPC的收费模式下，不管广告展现多少次，只要不产生点击，广告主是不用付费的。只有产生了点击，广告主才按点击数量经行付费。 淘宝的直通车就是CPC收费方式 ##CPA(cost per Actuin)：每行动成本，按行动收费## CPA中的A指的是action，即行动，但是行动是多种多样的。具体是那个行动，需要在投放广告的时候，广告主与代理公司和媒体约定好。有以下的A: CPI（cost per install）安装 CPR（cost per register） 注册 CPD(cost per download) 下载 CPS(cost per sale) 下单 购买 销售 CPL（cost per lead）按照广告点击引导用户达到服务商指定网页的潜在客户数量计费]]></content>
      <categories>
        <category>商业化PM</category>
      </categories>
      <tags>
        <tag>CPM CPC CPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[考核指标如CTR/CVR/ROI/ARPU]]></title>
    <url>%2F%E5%95%86%E4%B8%9A%E5%8C%96PM%2FCTR%20CVR%20ROI%20ARPU%2F</url>
    <content type="text"><![CDATA[##广告效果的评估## 程序化广告的KPI评估主要围绕广告效果 成本收益和投放保障三方面 广告主在品牌和效果都有投放需求，所以可以将其分为： 效果广告主，和品牌广告主。相应的，将广告主的考核指标分为三类：基础 效果 品牌 我们先定义广告消耗为cost，广告展示次数为Impression，广告点击次数为click （一）基础指标 CPM：cost per mile,或者cost per Thousand Impression,指每千人成本，即广告被展示1000次对应的价格。普通banner一般在1元/CPM，也就是banner广告曝光1000次是一元。 公式：CPM=(Cost/Impression)*1000 CTR:Click Thousand Rate 指广告的点击率，即广告点击次数占比广告展示次数的百分比，用公式：CTR=（Click/Impression）*100% CPC:Cost Per Click 指点击成本，即广告被电击一些次的价格，用公式：CPC=Cost/Click.综合CPM和CTR亦可以得出CPC，用公式表示即CPC=CPM/(CTR*1000),如果考核CPC，一般会从CPM和CTR着手 广告费用：特定周期内，广告投放的花费成本，比如每日/每周/月 （二）效果指标 点击量：广告被有效点击的次数，有点击总量和排重点击量之分。比如同一用户（同一Cookie或同一个设备ID）在一个小时内5次点击同一页面同一广告（页面未刷新的情况下），点击总量加5，排重点击量加1，下面指标中出现的点击量均指排重点击量。 转化量：转化量包括注册量、激活量、创角量等。PC环境中，注册量是指在Landing Page页面注册成为玩家的用户数量；移动设备中，注册量是指通过点击广告进入应用市场或App Store下载、安装并打开应用进行注册的用户数量，一般成为激活注册量。转换量同点击量一样，也有总量和排重之分。 登录量：已注册过的用户，后续通过点击广告进入Landing Page或App登录，重新再次回来的用户，这种情况一般是Retargeting（老用户找回）时出现。 CPA：Cost Per Action，指每行动成本，行业内常用于计算每注册成本，即获取一个注册用户对应的价格，如游戏广告需要用户通过广告页面注册成为玩家。用公式表示即CPA=Cost / 注册数。 CPL：Cost Per Lead，指每潜在客户获取成本，即获取一个潜在客户信息对应的价格，如汽车行业需要潜在客户通过广告页面填写表单预约试驾。用公式表示即CPL=Cost/Lead数量。 CVR：Click Value Rate，指广告的点击转换率，即广告转化次数占广告点击次数的百分比。用公式表示即CVR=(转化次数/Click) * 100%，这里的转化次数可以是注册数、Lead数量、订单数等。 召回率：在重定向广告中，被重定向的用户通过广告重新注册或登录的数量占总重定向用户数量的比例。 以上列出的是比较直接的广告投放效果考核指标，但实际投放中，通常还会考核后续数据，来决策后续是否继续投放或加大投放。 后续指标通常包含以下内容： ROI：Return On Investment，指投资回报率，即特定周期内，广告主通过广告投放收回的价值占广告投入的比例。一般来说ROI都会加上周期，比如日ROI、月ROI等，用公式表示即ROI=回收价值/Cost。比如某电商7月份投放了100万元的广告费用，并于7月份获取了价值200万元的有效订单金额，则7月ROI为200/100=2。 留存用户数：留存用户是指未来一段时间内再次登录的用户，通常会带上时间周期，如次日留存用户、3天留存用户、7天留存用户等，分别代表注册并首次登录日期后的第1天、第3天、第7天再次登录的用户。 活跃用户数：活跃用户没有标准的定义，活跃用户可能是未来一段时间内再次登录或者未来几天内多次登录的用户，通常还带上时间周期，如次日活跃用户、3天活跃用户、7天活跃用户等。7天活跃用户可能是注册并首次登录日期后的第7天再次登录的用户、或者7天内登录4天以上的用户。 付费用户数：成功付费的用户数量。 充值金额：付费用户成功付费的总金额。 DAU：即Daily Active User，指每日成功登录的用户数量。有些用户在当天可能有多次登录，因此计算需要排重。 WAU：即Weekly Active User，指一个自然周内成功登录的总用户数。跟DAU一样，用户计算需要排重。 MAU：即Monthly Active User，指一个自然月内成功登录的总用户数。跟DAU一样，用户计算需要排重。 ARPU：特定周期内，活跃用户的平均付费金额。 ARPPU：特定周期内，付费用户的平均付费金额。 留存率：特定周期内，留存用户数量占注册用户数量的比例。 活跃率：特定周期内，活跃用户数量占注册用户数量的比例。 付费率：特定周期内，付费用户数量占注册用户数量的比例。 留存成本：单个留存用户的获取成本，即获取一个留存用户对应的广告费用。用公式表示即留存成本=广告费用 / 留存用户数。 活跃成本：单个活跃用户的获取成本，即获取一个活跃用户对应的广告费用。用公式表示即活跃成本=广告费用 / 活跃用户数。 付费成本：单个付费用户的获取成本，即获取一个付费用户对应的广告费用。用公式表示即付费成本=广告费用 / 付费用户数。 LTV：指一段时间内用户生命周期总价值。用公式表示即LTV=统计周期内的充值金额/注册量，一般有LTV0、LTV7、LTV30，分别表示当天LTV、7天LTV、30天LTV。 需要说明的是，所有效果广告的投放目的一般是最终的ROI。 (三)品牌指标 广告可视度(Viewability)：有些广告位置是在第二屏甚至最后一屏，用户进入媒体如果没有滚动页面，广告则无法进入其视野。以曝光计费的广告购买，只要广告曝光到广告位就会产生费用，而不管用户是否看到广告。广告可视度指广告出现在窗口可见区域的广告曝光量占广告总曝光量的比例。可见曝光定义，一般像移动展示广告，面积要大于等于50，时长要大于等于1秒。移动视频广告，面积要大于等于50，时长要大于等于2秒。 广告可见的TA浓度(Viewability TA%)：TA是指目标受众，即Target Audience，TA%表示目标受众占广告投放曝光总人群的比例。 广告可见的TA到达率(Viewability TA N+Reach)：常见的有指标1+Reach、2+Reach和3+Reach，指可见曝光前提下的TA N+Reach。 独立访客数（UV数）：Unique Visitor数量，指在特定时间内访问页面的虚拟自然（用客户端标识）人的总数。 跳出率（Bounce Rate）：指只浏览了入口页面（一般指落地页Landing Page）就离开的访问量占进入该页面的总访问量的比例，用于衡量用户点击广告后进入页面的访问质量，或者衡量该页面对用户的吸引力。 频次（Frequency）：每波品牌广告通常会有频次控制的需求，以提升广告展示的有效性。 二跳率：二跳是指浏览入口页后在页面上产生的首次有效点击。二跳量是二跳的次数，二跳率是二跳量占进入该页面的总访问量的比例，可用于衡量用户的访问质量或该页面对用户的吸引力。 CPUV：Cost Per UV，指每UV成本，即广告曝光中获取一个UV的价格，即公式为CPUV=广告消耗金额 / UV数。 CPE或CPEV：Cost Per Engagement 或 Cost Per Engaged Visit，指单词互动成本，即获取一个用户互动行为对应的价格。 CPH：Cost Per Hour，受众对广告的浏览 / 互动时长的成本。 互动率：Engagement Rate，用于衡量广告投放中用户在广告素材或站内的交互度和参与度。交互行为是指用户对广告产生兴趣之后，到发送最终转换之前的动作或行为过程，如点击、分享、在线体验、站内搜索等。 回搜率：看到广告的用户中，之后一段时间在各个平台（如百度、淘宝、微博等）搜索广告主相关关键词的用户数占比，可用于衡量品牌广告对用户品牌认知的提升程度。 品牌安全：Brand Safety，一般由广告验证平台提供，可过滤敏感或非法的关键词或页面。 反作弊：Anti-Fraud，所有广告主都需要反作弊，需要考量服务方的反作弊能力。 无效流量验证：Invalid Traffic Verification，无效流量不等于反作弊流量，作弊流量只是无效流量中的一部分，并且无效流量的曝光不能计入可见曝光。 第三方监测差异（Discrepancy）：DSP的投放效果是否达标，不仅仅在于DSP平台统计的数据，还需考核该数据和第三方检测数据之间的差异值，一般称为gap值。]]></content>
      <categories>
        <category>商业化PM</category>
      </categories>
      <tags>
        <tag>CTR ROI CVR ARPU</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADS SSP DSP DMP全面解析]]></title>
    <url>%2F%E5%95%86%E4%B8%9A%E5%8C%96PM%2FADS-SSP-DSP-DMP%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[##一、概念 关系## 简单来讲，publishers是众多手足无措的小广告位、小朋友，ADN就是家长，去管理领取这些小朋友，让他们去学东西，长知识，但是呢，他们需要一个场所，学校，SSP就相当于一个学校，用来管理这些家长和小孩。这之后，就需要去选择要学习的东西了，学校怎么分配小孩和家长，这个交给教导主任DSP，他负责管理这些事情，小李是适合学习音乐，就让他去学音乐，家长掏钱，一个原理，在这之后呢，学校人数越来越多了，不方便管理与分配了，就需要一个教务系统了，用来统计学生与科目，以及对每个小孩进行分析，得出数据，教导主任得到这个数据之后，对每个小孩进行精细化教育分配，这就是这一套体系的前因后果。 Ad Network：由于碎片化的传播环境导致了网络上出现了N多的中小广告位（publishers），为增加这些publishers的价值，一种名为Ad Network的agency出现，负责整合这些publishers并与广告主谈判、交易。但由于：1、Ad Network自主制定交易价格导致publishers无利可图；2、提供的资源质量良莠不齐，流量不精准使广告主抱怨；3、再加上各Ad Network之间贩卖资源导致市场混乱； Ad Exchange：为解决以上问题便出现了Ad Exchange。它整合publishers及Ad Network，并统一称为“供应方”（supply side），通过“价高者得”的竞价机制对publishers进行购买并最终由技术支持实现“实时竞价”即RTB（Real Time Bidding），加上对购买过程及页面的优化，从而提升其竞争力。但由于：1、 平台上展示的publishers絮乱，而市场上又有多个Ad Exchange，广告主应该选择哪个Ad Exchange，怎样判断不同的publishers背后是否有target audience及应该如何出价，使广告主疑惑；2、 各Ad Exchange的储存量可是天文数字，广告主的购买过程将十分繁琐与复杂； DSP（Demand Side Platform）：有问题自然就有解决方法，一个协助广告主玩转Ad Exchange，名为DSP（Demand Side Platform）的需求方平台应运而生。DSP将Ad Exchange与自己驳接后向广告主提供一套更为简单的购买方式（决策及购买过程）。DSP深谙每一个广告背后都是一部分的受众的道理，对原来广告位的购买概念进行淡化，并提出target audience的购买概念。广告主只需要在DSP上告诉平台自己的目标人群及愿意出多少钱获取这些人群，平台就会通过后台强大的数据及运算方式帮你在Ad Exchange上操作，也就是进行程序化购买。而除了DSP与Ad Exchange之外，还有一个称为SSP（Supply Side Platform），即供应方平台的存在。SSP其实就是管理着publishers 和 Ad Networks这些供应渠道与Ad Exchange之间的供给关系。而程序化购买的要点就是“强大的数据及运算方式”。具体表现为：1、 海量及准确的受众数据，保证投放的精准性；2、 强大的自动化算法，保证最合理的竞价（RTB）；其中，受众的数据最为重要，很多DSP自己并没有受众数据又或者有但并不全面、准确。这时市场上又出现了另一个专业的提供者—DMP（Data Management Platform），数据管理平台。 DMP（Data Management Platform）：简单讲，它们手中握有受众数据，并能让 DSP 驳接到他们，利用它们所有的数据。使投放更为精准。而DSP为获取数据至少需要;1、 通过追踪，获取用户上网时产生的cookie，作为basic data；2、 实现跨域追踪，跨域追踪即在多个不同的域名中获取同一个用户所产生的数据，而跨域又包括跨主域及跨子域； 定义 在线广告的演化进程催生出程序化购买的概念，即把从广告主到媒体的全部投放过程程序化，通常需要一个程序化平台去购买广告展示。 程序化购买主要分“公开竞价”、“私有市场”两类交易方式， DSP-需求方平台也就是广告主服务平台，广告主可以通过DSP平台设置自己想要的受众目标以及愿意出多少钱购买这些受众的曝光等操作完成广告投放，面向广告购买方。 SSP-供应方平台它是媒体服务平台，媒体方可以通过SSP平台完成广告资源的管理，如流量分配、价格、筛选等等，面向广告售卖方。 ADX-广告交易平台连接买方和卖方，ADX将媒体的广告流量以拍卖的方式卖给DSP。 DMP-数据管理平台整合各方数据并提供数据分析，数据管理、数据调用等，用来指导广告主进行广告优化和投放决策。 如图所示： ##二、DSP广告系统架构及关键技术解析## 广告和网络游戏是互联网企业主要的盈利模式 广告是广告主通过媒体以尽可能低成本的方式与用户达成接触的商业行为。也就是说按照某种市场意图接触相应人群，影响其中潜在用户，使其选择广告主产品的几率增加，或对广告主品牌产生认同，通过长期的影响逐步形成用户对品牌的转化。 一个好的DSP系统需要满足： 拥有强大的RTB(Real-Time Bidding)的基础设施和能力。 拥有先进的用户定向(Audience Targeting)技术。 首先，DSP对其数据运算技术和速度要求非常之高。从普通用户在浏览器中地址栏输入网站的网址，到用户看到页面上的内容和广告这短短几百毫秒之内，就需要发生了好几个网络往返(Round Trip)的信息交换。 Ad Exchange首先要向DSP发竞价(bidding)请求，告知DSP这次曝光的属性，如物料的尺寸、广告位出现的URL和类别、以及用户的Cookie ID等；DSP接到竞价请求后，也必须在几十毫秒之内决定是否竞价这次曝光, 如果决定竞价，出什么样的价格，然后把竞价的响应发回到Ad Exchange。 如果Ad Exchange判定该DSP赢得了该次竞价，要在极短时间内把DSP所代表的广告主的广告迅速送到用户的浏览器上。整个过程如果速度稍慢，Ad Exchange就会认为DSP超时而不接受DSP的竞价响应，广告主的广告投放就无法实现。 其次，基于数据的用户定向(Audience Targeting)技术，则是DSP另一个重要的核心特征。从网络广告的实质上来说，广告主最终不是为了购买媒体，而是希望通过媒体与他们的潜在客户即目标人群进行广告沟通和投放。 服务于广告主或者广告主代理的DSP，则需要对Ad Exchange每一次传过来的曝光机会，根据关于这次曝光的相关数据来决定竞价策略。这些数据包括本次曝光所在网站、页面的信息，以及更为关键本次曝光的受众人群属性，人群定向的分析直接决定DSP的竞价策略。DSP在整个过程中，通过运用自己人群定向技术来分析，所得出的分析结果将直接影响广告主的广告投放效果。 此次分享主要针对以下几个方面，描述DSP广告系统架构及关键技术： 广告系统概念介绍 广告系统业务流程 DSP系统架构 RTB竞价引擎结构 点击率预测 DMP数据处理架构 受众定向划分 用户画像与广告系统反作弊 程序化购买的特点下图是在DSP产生之前和产生之后广告行业的两种最常见产业链 传统的广告投放模式的产业链是广告主通过广告代理，以广告网络/联盟为渠道在媒体网站展示广告，达到接触受众的目的的过程。 这种模式的好处是媒体网站可以通过通过包段或CPS的模式可以售出自己的广告位，但是这类售出是偏粗放型的，长期同类型的广告投放，受众会视觉疲劳，点击率会下降，转化也会随之下降。为了能够获得更多的收益，媒体必须通过差异化销售细分自己的广告位和受众。而事实上显示广告领域最初的定向投放的最初动机是供给方拆分流量以获得更高的营收。好的位置，通过包段通常会供不应求，但是对于长尾流量通常是会无人问津，即便是对于广告主来说同一个潜在客户在大媒体出现会有广告主包段进行购买，但是在小网站出现就会没人买。事实上潜在客户在哪里出现对于广告主都是同一个人，如果能显示与客户需求相吻合或接近的广告就有可能产生转化。在将优质广告位包段售出后，如果对用户有足够的认识，有足够多不同类型的广告主，在流量可以拆分到单次展现的购买粒度，就有可能依据不同的受众定向为每个广告主找到合适的人群和流量。 程序化购买颠覆了原有广告产业链，形成了全新的产业链。 鉴于群里有很多人不是做广告系统的，为了能够在后续的介绍过程中更容易理解介绍的内容，这里先介绍一些广告行业中常见的一些概念。 DSP（Demand Side Platform），是广告需求方平台，DSP为广告主提供跨媒介、跨平台、跨终端的的广告投放平台，通过数据整合、分析实现基于受众的精准投放，并且实时监控不断优化。 RTB（Real Time Bidding）实时竞价是DSP、广告交易平台等在网络广告投放中采用的主要售卖形式，会在极端的时间内（通常是50~100毫秒以内）通过对目标受众竞价的方式获得该次广告的展现，RTB的购买方式无论在PC端或是移动端均可以实现。 程序化购买（Programmatic Buying）根据广告主定义的期望受众，系统帮助其找出优选的媒体来购买受众，为广告主提出最优媒介采买计划，通过程序化购买的方式执行，并按照期望的周期反馈监测结果，并对后续投放进行优化。包括但不仅限于RTB购买。 最常见的DSP行业中的供需业务流，广告主作为需求方，潜在客户是最终的受众，中间穿插着代理机构，DSP，AdNetwork，AdExchange,SSP和供应方也就是媒体。 下图是DSP平台的广告投放流程，投放过程中涉及到广告受众，媒体网站，adx和dsp，分别标注了广告投放各阶段伴随发生的事件。从1~7步之间只允许100ms之内的延时，否则广告受众就会觉得网页加载速度太慢而选择离开。 在线广告的核心问题 需要在特定用户，在指定上下文的环境下，找到最合适的广告，进行投放，并尽可能产生转化。 在线广告的挑战大规模 百万量级页面，十亿量级用户，需要被分析处理 高并发在线投放（每天处理百亿次广告交易请求） 时延要求严格（adx通常要求竞价响应时间在100ms完成） 用户定向动态变化 用户的关注点和购物兴趣变化会比较频繁，需要能够及时更新用户画像 上下文条件变化频繁 用户和上下文多样化的环境一起用于广告候选检索 DSP系统架构 上图是主要模块的流程图涉及到的角色包括广告主网站，媒体网站，广告网络和DSP，以及DSP内部的相关模块，如：RTB引擎，业务平台，日志收集系统，DMP，CM和反作弊系统。 投放前DSP会要求在广告主网站布码，同时在DSP的业务平台中录入广告投放的需求，如投放金额，投放排期，投放定向（如地域，兴趣，年龄等），最高限价。 当访客（即潜在的消费者）从左上角访问广告主网站开始，访客在广告主网站上的行为会被收集，同时DSP会与ADX和SSP进行Cookie Mapping，形成日志进行处理，形成回头客相关的行为数据标签。 当访客完成对广告主网站的访问，去其他媒体网站进行访问时，相应的媒体广告位根据事先嵌入的广告代码向广告网络发起广告请求，广告网络会将广告请求封装成http头 pb体的格式向多个DSP发起竞价请求。 当DSP接到竞价请求时会根据与广告网络约定的pb格式进行解包，拆解出相关的字段进行匹配，根据之前相关媒体积累的点击率结合点击率预测模型对出价进行预测，找出平台内在此次竞价请求能让平台利益最大化的广告主的创意进行投放，返回给广告网络出价与广告代码 广告网络会在特定时间内（通常是50~100毫秒）根据多个DSP的出价高低，以第二名价格多一分的价格让出价最高的dsp胜出，并将广告代码中的展现宏和点击宏进行替换（替换过程中会根据事先与dsp约定好的公钥对价格进行加密，以防止第三方篡改和窃听） 广告网络将广告代码返回给媒体，媒体会将广告代码放置在js对应的位置进行展现，展现和点击的过程中会先后触发广告网络和胜出DSP的展现代码，广告网络和DSP分别接收到展现请求会对相应的展现进行计费操作（月底会相互进行对账） DSP内部会根据收集到的展现和点击进行计费操作，形成相应的报表；而浏览、展现、点击的记录会分别进行收集形成日志，经过ETL由DMP进行抽取和分析，形成媒体数据，用户标签，CookieMatch数据以及回头客用户标签数据，这些数据会在投放过程中作为RTB竞价的参考依据。 整个投放过程中其实还有一些其他的模块出现如CookieMapping、反作弊，动态创意、网站分析系统。只不过这些系统不是在主干流程上，后续单独进行描述和分析。 为了保证投放，DSP系统实现了多机房部署的结构，南北方机房分别在杭州和北京部署RTB引擎、点击率预测与相关的展现点击收集节点。投放活动相关数据通过Redis进行缓存，多机房进行准实时同步，媒体展现点击数据通过kafka队列进行推送，通过Consumer进行消费统计，最后通过媒体数据分发集群分发到多个机房进行使用。 RTB投放引擎的架构 RTB引擎是DSP系统的核心，是实现高并发实时反馈的关键，RTB对外以HTTP服务形式暴露接口，当媒体上的js被触发，adx/ssp收到js请求后会将请求封装成http头 pb体(protocol buffer,谷歌定义的序列化数据交换格式)的方式作为客户端连接RTB，RTB对http消息按照事先约定解包在内部依靠相关数据进行计算，最终返回pb或json格式的出价和广告代码给广告交易平台。RTB 需要支持高并发（每天百亿级别请求）和低延时（50ms之内需要反馈）。 当时我们的RTB采用Linux C 开发，通过Adapter适配器层解耦适应不同的SSP/adx，算法池内部拆分成五层，五层之间相互正交，算法模块允许热插拔，编译完成的动态链接库可根据配置文件的变化实时进行加载和卸载，允许多算法链并行拆分流量进行A/B测试，流量处理过程中会对流经不同算法链的流量打上不同的算法标签，并在后续展现，点击过程中持续带上此标签用于后续效果的跟踪和分析。 下面说一下在针对RTB进行架构设计过程中涉及到的一些技巧： 由于一个dsp要接触到尽可能多的流量和用户才有可能找到符合广告主定向的目标受众，那dsp一定要对接很多的adx和ssp，来接受尽可能多的流量。设计适配器层的目的就是将不同adx之间的流量格式差异消灭在适配器这一层，对于进入系统内部的流量都一视同仁，简化了rtb系统的复杂性。RTB系统在设计之初就考虑了AB测试的环节，让算法的效果能够进行横向比较，方便算法进行优化。RTB本身是不带状态的，也就是说，它只能依靠外部的辅助系统提供的信息，如点击率预测，人群定向和反作弊这类模块提供的数据才能实现快速反馈的同事能正确反馈。 DMP 对于RTB的设计在后续提问和讨论的环节我们再做进一步分析，下面讲一下DSP系统中除了RTB之外的另外一个核心：DMP 首先需要定义一下广告投放过程中关键的一些数据： 广告系统DMP数据处理的架构 跟大多数的大数据相关的系统很相似，基本上逃不开那几样东西Hadoop，storm，redis等等: 数据处理部分结合了Hadoop的离线计算、Spark的批处理和Storm的流式计算。 HBase和MySQL用于最终结果落地用于前端查询。 ElasticSearch 有准实时索引，用于明细数据实时查询和时间序列历史回溯统计。 Spark内置的机器学习算法库MLLib主要使用分类，聚类KMeans，协同过滤，决策树，逻辑回归。 由于之前在群里的分享中,王新春@大众点评 ，王劲@酷狗音乐 讲了很多storm实时处理和大数据架构的内容，他们二位都是大数据领域的大佬了，我在这里就不班门弄斧了，简单提一下广告行业里是怎么做的，基本上大同小异，大家用的东西都差不多。 对于广告投放要投放的目标，落实在dmp中就是需要找出相应的受众定向，下面简单分析一下几类受众定向： 上图是广告有效性模型根据受众定向的定性评估表，水平方向是定向技术在广告信息接受过程中所起作用的阶段，垂直方向是大致的效果评价（从下往上效果依次升高）。 按照计算框架不同这些受众定向可以分为三类： 用户标签t(u)，即在时间序列上用户历史行为为依据，为用户打上的标签。 上下文标签t(c)，即当前用户联系上下文在当前的访问行为达到的即时标签。 广告主定制化标签t(a,u)，是根据特定广告主提供的特定用户群在其网站上的访问行为数据加工所得。 其中：地域定向、频道定向和上下文定向属于t(c)的定向方式；人口属性定向、行为定向属于t(u)的定向方式； 而重定向和Look-alike则是t(a, u)的定向方式。 地域定向主要用于商家销售目标局限于特定区域的情况下； 人口属性主要包括年龄，性别，收入，学历等；频道定向主要是针对媒体侧特点，对相应受众进行划分；上下文定向主要是根据当前网页的内容上下文推送相关广告；行为定向是根据用户历史访问行为，了解用户喜好，进而推送相关广告；精确位置定向是在移动设备上根据精确的地理位置投放广告，更聚向与地域性非常强的的本地生活类广告主； 重定向是对特定广告主一定时间段内访客投放广告以提升效果的广告投放方式，人群规模由广告主固有用户量和媒体重合量共同决定；新客推荐是在重定向规模太小，无法满足广告主接触用户需求的情况下，以重定向用户为种子，根据广告平台数据积累，为广告主找出行为相似用户的定向条件。 用户画像的方法接下来基于上面提到的积累受众定向介绍一下用户画像的方法 我们能够看到用户画像其实也就是对于用户特征的提取，涉及到人口，设备，运营商，位置以及用户的浏览，点击购买等行为数据。用户画像是通过对用户特征的提取对用户行为进行定性和定量的描述，形成：【用户ID:用户标签：标签权重】形式的用户画像标签，在广告投放过程中，根据提取流量对应用户权重较高的若干个标签反向对广告主进行筛选，找出适合流量特点的广告素材。 用户标签用于广告主对于受众的选择，而权重用于在海量用户标签里选取重点的标签进行投放。 同时要注意用户的画像随时间的推移会有衰减，需要在用户画像的过程中考虑时间衰减的因素，因为用户的爱好和习惯会随着时间变长而有变化，同时数据的时效性也决定了用户画像的准确程度，进而影响广告的投放。 事实上在广告平台中收集到的最多的数据是用户的浏览数据，在拿到这么多的浏览数据的情况下，想要分析出用户的爱好和兴趣以及需求，那就需要对网页的内容进行分析和抽取，下面介绍一下用户画像中非常重要的行为标注部分的架构： 用户在浏览一系列网站的过程中是多少会带着一些目的性进行浏览的，即便是没有明确目的，也会带有一些个人喜好，有了这些目的和喜好，就会进一步缩短我们在推送广告过程中对于用户定向的选择难度。上图就是在上下文定向中对网页关键字提取的子系统的架构。【上下文定向】可以通过网页关键字提取，建立一个cache，根据URL建立对应标签，当广告请求到来时，命中相应URL则返回cache的命中内容，如果URL未缓存则返回空集合，同时将URL添加到后台抓取队列，在URL被抓取，并打上标签存入cache，为cache设置TTL，当长期不访问则将该URL的记录清楚，而热点内容URL的关键词是始终被缓存的，运行较长的时间则大多数热点URL大多会被缓存。在抓取到内容之后，需要对网页内容进行内容挖掘，在挖掘的过程中有以下几个方案可以被选取： 网页文本内容通过扩展语境，引入更多文本进行挖掘；利用语义分类树；建立主题模型。 我们在上面提到了在线广告的核心问题其实是找上下文，用户，广告三者之间的最恰当的匹配。 在展示类广告中比较重要的一个核心考核点就是点击率，因此点击率预测模块在DSP中是非常重要的部分 CTR预估涉及到三种角色：受众用户，媒体，广告主 预估的目标是为特定的受众用户再给定的媒体环境下找到最合适的广告，对媒体来说实现收入最大化，即按照eCPM排序的基本原则来排序。 最简单的CTR预估的模型，根据历史日志，统计出三个维度的CTR对照关系，预测过程中，当一个user访问特定url时，查询词典如果存在的CTR，则返回CTR最高的ad，如不存在，则随机返回ad，积累后续数据。 存在问题：基于统计数据，对旧广告效果还可以，但对冷启动的广告没有预测能力。 事实上，我们在线上做点击率预测模型，使用的算法是逻辑回归，后续可能考虑会用到的广告点击率预测方法有： 机器学习方法：特征 模型 融合方案 协同过滤方法：看做推荐系统来处理 排序模型以预测结果为基础，广告排序模型有如下几种： 点排序（point-wise approach）：变成分类问题或者回归模型来处理 对排序（pair-wise approach）：比较两个广告谁的优先级高，不分类 列排序（list-wise approach）：对整个广告候选集学习排序模型 广告行业的反作弊 作弊背后必然有一个或者一堆的人从众有获利，比如制造垃圾站挂广告获利的总是扎堆出现的。如果你抓到了一个网站流量异常，在用工具刷量，那肯定不会只是这一个网站在用这个模式在刷量；如果一个人有多个网站，如果有一个网站在刷量，那他的其他网站也应该检查一下了。 在广告反作弊的过程中，为了找出刷量的垃圾站背后都有哪些人，这些人有哪些网站，针对DSP平台流量80%的网站域名去重，通过whois信息查询到域名注册邮箱，归类出哪些域名属于哪个注册邮箱，发现其中一个刷量，则对同一邮箱下的其他域名进行严查。 上图是主要的一些广告反作弊的思路，广告作弊是有成本的，有人作弊，还是背后有利益驱动，找出利益链条是反作弊的关键 下面对之前我们做广告反作弊工作过程中遇到的几类例子： P2P流量互刷互刷作弊有代表性的软件是：流量宝和流量精灵 均通过客户端软件向服务器提交互刷任务请求，客户端收到服务器分发的互刷任务后执行隐藏的浏览任务，每天可达到数千个IP的访问量，IP布局分散，UA随机生成，很难通过浏览记录寻找作弊痕迹。现在唯一有效的反作弊方法需要通过蜜罐主机进行跟踪和分析。下面介绍一下我们对于p2p刷量所采用的蜜罐主机的结构： 其中虚线框中是我们的的蜜罐系统，虚线框外面的灰色部分是我们要寻找的作弊目标 如果是对信息安全有一定了解的人对于蜜罐系统一定不陌生，也就是系统设计上有意抛一些破绽出来，让攻击者自己跳出来，通过对攻击者行为的观摩来寻找破解攻击的思路。 由于流量宝、流量精灵一类的刷量工具多集中于windows平台下，安装windows vm并将系统代理指向nginx反向代理，通过刷量工具提交刷量任务。提交刷量任务的站点没有任何真实流量，只要是访问这个站点的IP基本上都是通过刷量工具来的流量，IP可以在RTB引擎对相关IP端进行封杀，不再进行投放； Nginx反向代理落详细日志通过Logstash收集、解析发送给ElasticSearch建立索引，通过kibana做可视化，统计出刷量最多的IP，域名和URL地址出来，可以作为后续模式识别的模型输入。搜集相关证据，域名可以向adx反馈对媒体进行封杀，同时可以根据筛选出的刷量作弊域名在DSP投放过程中减少投放以避免自身损失。 CPS引流作弊我们遇到的另外一种对于DSP投放效果有非常大影响的一类作弊手段是：CPS引流作弊 引流作弊可以帮助引流网站“提高”CPC，“提高”CPS。但对广告主不产生实际有效的流量。 目前发现的引流作弊行为有3种： 作弊代理通过回帖作弊（对媒体网站无控制权） 作弊代理伙同媒体网站作弊（对媒体网站有控制权） 作弊代理伙同媒体网站通过网盟作弊 也就是说在DSP投放了广告的网站里被插入了跳转到CPS计费链接的302跳转的图片，虽然DSP花钱从adx买了流量投放了广告，但是这个页面里还有大量的CPS结算的链接跳转，如果广告主既在网盟，又在DSP投放广告的话，任何看过这类页面的人在广告主网站下的单，就有可能被劫持走。整个过程中，用户都不知道有’广告主’的存在。但是对应的’广告主’会认为是特定CPS链接带来了一个点击，后续的cps应该是记在相应的CPS合作方名下。 Q &amp; AQ1：请问付总dmp数据存哪里？HBase？ 数据分不同的形式存在不同的地方，原始日志存放在硬盘上，经过ETL后写入HDFS，结构化存放在Hive表中进行查询，cookiemapping数据经过hadoop计算过后导出成文件，存放在Tair里让RTB查询，用户行为数据存放在hdfs里，画像之后数据存放在redis供rtb查询，跑出来的统计报表存放在mysql供报表系统调用。CM的cookie对应数据有一部分也是存放在hbase的，hbase和hadoop共用hdfs，所以查询速度也会受到hadoop集群资源多少的影响。 Q2：请问 RTB算法模块热插拔大概是怎么实现的？ 上面我曾经提到过RTB系统是用Linux C 开发的，如果对于Linux C 比较熟悉的人应该知道Linux下是可以动态加载动态链接库的使用的主要是： dlopen：打开动态加载库 dlsym：获取接口函数指针 dlcose：关闭库 这三个函数就可以在程序运行时加载动态链接库了。为了达到模块准实时热插拔的目标我们还使用了Linux下的inotify, inotify是一种文件系统的变化通知机制，如文件增加、删除等事件，可以立刻让用户态得知。我们在RTB程序启动过程中向系统注册了inotify事件来监控配置文件，当配置文件被修改的时候立即通知程序重新加载配置文件 Q3：请问cookiemap是离线map还是实时map？map后数据正确率有多少？移动端map 主要根据那些key来map？ cookieMapping分在线和离线两种，通常情况下广告投放过程中会有几个场景会发起cm 第一种，广告主网站上布码之后当访客访问广告主网站时触发js，dsp会主动向各家对接过后的adx进行cookiemapping 第二种，广告投放过程中，当dsp的出价的同时会带上广告展现代码里面也包含有cm代码，当出价高于其他dsp的时候，广告代码会被吐到媒体网站，相应的也会触发cm 第三种，当在adx消耗金额达到一定水平，像Tanx会按照消耗比例每天向dsp发起一定比例的dsp无法识别用户的cm请求，这个时候dsp也会向其他adx发起cm 除此之外对于运营商数据的使用过程中通常就是离线匹配的了，方法通常是运营商的浏览数据来自于路由设备的DPI信息，里面有用户的adsl账号信息，运营商会找出一定时间内访问过dsp指定的几个域名的人，通常会在这个域名下面的所有页面都布上cm代码，通过http头就能找出dsp的cookieID，找出的这些人都会有adsl账号标识，通过账号就能建立与dsp的cookieID的关系，这类cm就是离线的了。 Q4：请问怎么识别是同一个用户？通过cookie，还是有其他先进的办法？ PC端的用户识别通常是依靠cookie，这类cookie好植入，但生命周期比较短，无法直接跨浏览器/跨设备，同时容易被各类电脑管家/助手清理，所以很容易出现信息苦苦画好的用户画像，过两天这个id就再也不出现了。 在PC端还会用flash cookie的方法来打通不同的浏览器，因为flash storage是同一块存储不同的浏览器可以跨浏览器打通。 当然还有一种叫evercookie的手段集合了包括flash cookie 之内的多种标识方式，感兴趣的可以了解一下这个网址 http://samy.pl/evercookie/ 移动端的身份标识，安卓的包括android id，mac地址IMSI和IMEI，而iOS是IDFA。由于移动设备上安装的app里可以嵌入SDK，而app有可能在移动端的权限也不同获取到的标识也会有差异，所以最终也会涉及到用户标识统一识别的问题，当然移动端的用户标识会远比PC端要强很多，移动广告化之后用户画像将会更加的准确。]]></content>
      <categories>
        <category>商业化PM</category>
      </categories>
      <tags>
        <tag>DSP DMP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信营销（一）]]></title>
    <url>%2F%E8%90%A5%E9%94%80%2F%E5%BE%AE%E4%BF%A1%E8%90%A5%E9%94%80%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[一、合作互推 虽然是微博上的玩法，但据称效果还不错！这也是最好最快的方法。微信互推的效果远比微博互推的效果好。先做到1000粉丝后开始找人合作互推，每次效果好都会获得上百的粉丝。所以做微信合作也很重要。 但需要切记的是，这种方法可在微博上互推，但微信上需谨慎，一旦被举报，有可能被封号。因此同一个合作伙伴的互推次数需谨慎，搞得不好容易扯到蛋。 二、微博图片推广 这种方式最守得住节操，不管是个人微博小号还是官方号，都可以在微博配图的最底下加上二维码的宣传方式。 你或者会吐槽说天天看到，会不会让人讨厌？但这是最不伤害用户的方式之一。 三、微博大号推广 有很多草根微博大号靠这种方式做微信都非常快的获得了很多的粉丝。也可以利用自己的资源跟别人互换。但是对于没有资源的新手，只能找一些微博大号给钱进行推广了。 因此你基本可以看到一些有组织有纪律的微博大号，都会和自己一派的微博进行互推，小编甚至有看到一些微博大号每天都进行推广。 四、QQ群用户挖掘 通过结合企业自身的行业属性，在qq群中进行关键词检索，能更好的找到精准属性的潜在用户群。同时qq账号与微信的打通，大大增加了用户转化便捷度。通过qq邮件、好友邀请等方式，都能批量实现qq用户的导入。通过小规模试验，证明具有一定的可行性和回报率。 五、其他线上推广 这类型的推广就无需多介绍了，无非是在人人啊！豆瓣啊！贴吧啊！空间等等进行推广。 但这类的推广也是有需要注意技巧的地方，比如贴吧，可以将二维码做成签名图片，这样子几乎你的每一次评论都是一次宣传推广，且不容易被删。 六、小号带大号 有资源的朋友可以用这招，搞几百个小号，然后疯狂的加微信好友，不管是通过任何任何方式。但小编不会告诉你，通过伪妹子，在头图和图片上放漂亮妹子图的方式，是最容易加好友的。当然这样是比较无节操的一种方式，但为了粉丝，哪能要节操呀！ 有了一大批好友之后，虽然大多都是寂寞男子，就可以为大号进行推广了。不过需要强大的执行力和体力劳动。然后群发名片或信息，进行推广。但坏处是容易被举报。因此在处理方式上需要多考虑考虑如何推； 七、基于LBS的推广 这也是最简单的方法，就是：个性签名。设置好诱导的个性签名。然后查看附近的人，你就可以被别人看到，如果你的签名吸引了别人，就有可能获得关注。小编不是说理论，有人试过，最开始用了一个小时不到时间，就吸引关注120人左右。而所做的事就是设置个性签名，然后偶尔查看一下附近的人。 如何放大这个方法？ 因为我们附近的人毕竟有限，所以仅靠这种方法吸引关注只是前期有效。那么如何放大呢?很简单，就去不同的地点登陆微信小号然后查看附近的人，然后你的地址信息就会保留一个小时左右。这一个小时如果机会好可以获得30人以上的关注。那我们如何快速换地方登陆呢?那就需要我们有多个小号，然后快速到不同的地方登陆。最好的方法就是坐公交，坐一趟公交没隔一个站登陆一个小号。如果有50个小号，每个小号每天可以搞定40个粉丝，那么每天就可以搞定2000的粉丝。但是这个肯定会比较累，需要强大执行力才能够做到。 八、摇一摇（男人靠摇） 如果以上的方式觉得很累？怎么办！摇一摇呗！ 就坐在家弄就行了，就“摇一摇”，我们的目标是让他们看到我们的签名或者加我们，那么你就可以不停的摇一摇，有人曾经试过，效果出奇的好。这个方法的好处是可以突破地域限制。摇一摇是按照最近的同时摇手机的用户配对，如果附近没有，那么就会给你配对其他相对较近的。 小编才不会告诉你用伪妹子的效果是最好的。 九、（女人靠漂）漂流瓶 这种玩法已经有人在玩了，基本就是以上搞的几百个小号，每天都丢几千个漂流瓶，然后写一些诱导的留言，让他们主动加你。也可以直接宣传微信号！但这效果不容易被接受。为什么这类的玩法都是伪妹子最有效果！ 十、企业实体资源 这属于有资源的朋友可以做的事情，比如你有实体店，有资源或者有钱。方式很多，贴广告，在自己拥有的资源里放广告位等等进行宣传。当然还可以在街上或地铁口派发宣传，总而言之，有钱就烧广告，有资源就广告牌，没钱没资源就大街上派宣传单。 十一、企业广告资源和营销资源 通过宣传单、海报、产品包装、名片等形式，可将公众账号二维码进行很好的展示及传播。特别是针对具有线下店面的企业和商家，能更好吸引用户实现重复购买。通过公众账号的客户关怀及服务、特惠推广等形式，将用户转化为忠诚用户。 十二、活动推广 基于活动推广的可分为线上和线下，线上还包括互联网和微信活动，方式众多。比如在微博上发起活动，关注就有机会活动礼品。或者在微信里发起活动，介绍身边的朋友即可获得折扣礼品等等。线下方式可参考微博，比如餐厅需要推广自己的微信号，只要推出活动让每个来的客人关注微信即可享受折扣或送某某食物等等。 这种方式太灵活了，每一种行业都有不一样的推广活动，就不一一举例了。 十三、以号养号 这种方式是小号带大号的升级版，为了守住节操，有时候大号不方便参与一些没节操的刷粉方法。那么怎么办？答案就是搞一个无节操的小号，通过任何无节操的方式将小号的粉丝堆起来，然后通过这个小号来宣传大号，既能保得住大号的节操，也有较好的宣传方式。 其实这种以号养号的方式最好是做一些无节操的草根大号，比如什么星座啊！感情类的啊！搞笑的啊！之类的可以毫无节操的小号，而且更容易养起来。再基于这些已经有几万甚至几十万粉丝的大号来推，效果会好很多。 十三、基于社交应用的推广 如果你玩陌陌或遇见这类的约炮神器，你经常会发现一个现象。他们都会在签名里写上：陌陌/遇见少上，请加微信***；而且几乎都是漂亮妹子的签名，小编当然不会告诉你，那些可能都是伪妹子。 十四、软文推广 软文推广比较适合一些企业推广自己的公众号，自媒体类公众号也比较适合用软文方法推广。写好软文之后，发布到大流量的平台。点击量达到10万的话，也能吸引不少的粉丝关注，重点在于软文的质量，还有发布软文的平台。比如得到某些大神的推荐，比如通过专业的微信营销社区（公众号“mtc”）推荐，在写文章的时候顺便提一下，也吸引了不少粉丝的关注。 十五、微信互推 相关性的微信可以互推。虽然微信现在禁止互推，但是适当的推荐公众账号还是可以的，但是这得把握好尺度，否则被腾讯误判为互推就惨了。推荐公众号要隐蔽一些，别太直接，推荐一个账号就行，别推荐太多。 十六、手机通讯录推广 也许有的企业或者个人拥有很多客户的手机号码资源，那么如何将这些资源转化到公众号上呢?群发短信有效吗?效果肯定不会好。这里提供一种方法供参考。可以将这些手机号批量导入QQ通讯录(通讯录工具)，这里需要一个新的手机号码来绑定QQ通讯录，然后将这个手机号码绑定到微信小号，再利用微信小号来加通讯录里好友的微信。最后将私人微信的好友转化到公众号。这个方法比较复杂，步骤繁多，效果不会太好，不推荐。 十七、QQ号码小号模式推广 这招也比较实用的，就是利用私人微信小号加QQ上的好友的微信，然后再将微信小号的好友转化到公众号上。这样就可以先加目标人群的QQ，这样你的客户既是你的QQ好友，又有机会成为微信粉丝，一举两得。我做本地微信号的时候也常用此方法。自媒体微信公众号用这个方法也很好。 十八、软件推广 前不久，很多自动打招呼软件和站街软件在出售，我也购买了一套自动打招呼的软件来用。但是目前这些软件已经大部分不能用，即使能用效果也变得不好。主要方法是，利用私人微信小号加微信为好友，再将私人微信的好友转化到公众号。我前不久用的20个私人微信小号，目前全部被腾讯封了。用软件已经不太靠谱，不推荐。 十九、微信小号推广 利用微信本身的资源来推广公众号是最容易的方法，也是大部分人都在用的方法。可以利用小号加好友，每个小号可以加四五千好友都没问题(目前还不清楚小号加好友的上限)。然后再通过小号来转化。 二十、内容为王 自然增长 现在很多公众号是可以实现自然增粉的，每天增加几十个甚至上百个粉丝都是有的。如何实现自然增长呢?有如下两个方法：1、取一个好的名字，重点是名字中的关键字，然后认证微信号，如果微信排名靠前，这样被微信用户搜索到的关注概率就比较大了;2、把内容做好，好的内容粉丝会主动分享到朋友圈，这样也能吸引粉丝关注。 二十一、案例分享 通过案例分享、运营分享等模式，将自己运营账号的经验进行分享，也可以吸引用户，但这类用户大多是研究者和学习者。如果你能持续的撰写这类文章，可以尝试。例如我们经常可以在MTC：关注微信营销和微信创业门户（公号“MTC”）网站上看到很多案例精选，就是自己账号很好的置入。 友情提醒： 1.做好内容定位 内容的形成，是建立在满足用户需求的基础之上，包括休闲娱乐需求、生活服务类的应用需求、解决用户的实际需求等等。微信公众号需要推送的内容一定是高质量的原创或者转载率高的内容为主。 2.做好微信认证 信很多朋友都会问微信公众号开通后是否需要认证，在我看来是非常必要的。因为认证的微信号会有搜索中文的特权，而微信认证的门槛也相对较低，只需要有500名订阅用户，绑定您的个人或者企业的认证微博即可。 认证后的最大益处就是可以直接在微信的添加好友内搜索中文即可，而且还支持模糊查找。 //这里总有你想要的 如果你不知道如何开通？ 《教你6步完成企业微信注册》http://wenku.baidu.com/view/14f571260066f5335a812133.html 如果你刚刚入手，有很多基本问题？ 《FAQ:微信公众平台运营常见问题集锦》 http://www.mobiletalkclub.com/newmtc/?p=3155 如果你不知道如何运营？ 《7个运营企业微信的有效建议》http://blog.sina.com.cn/s/blog_4ce36ed10101acqd.html 原文地址：http://blog.sina.com.cn/s/blog_4ce36ed10101jxov.html]]></content>
      <categories>
        <category>营销</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[rfm深入浅出]]></title>
    <url>%2F%E8%90%A5%E9%94%80%2Frfm%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%2F</url>
    <content type="text"><![CDATA[RFM模型概述 RFM模型是网点衡量当前用户价值和客户潜在价值的重要工具和手段。 RFM是Rencency（最近一次消费），Frequency（消费频率）、Monetary（消费金额） R：(Recency)最近一次消费时间距离天数；当天的日期-每个客户的最后一次交易日期＝客户最后一次交易距离天数 F：(Frequency)消费频率、购买次数 M：(Monetary)消费总金额 客单价和累计消费金额的区别： 比如说一个人在一段时间里面买了3笔订单，每一笔都是100元，那他的客单价就是100，累计消费金额就是300； 与金额相关的字段： 客单价=消费总金额/客户数；（人均累计消费） 件单价=消费总金额/商品件数； 平均每次购买金额=总金额/购买次数；一个客户若一天内购买多单，只能算一次 如图所示： R值: Rencency（最近一次消费） 消费指的是客户在店铺消费最近一次和上一次的时间间隔，理论上R值越小的客户是价值越高的客户，即对店铺的回购几次最有可能产生回应。目前网购便利，顾客已经有了更多的购买选择和更低的购买成本，去除地域的限制因素，客户非常容易流失，因此CRM操盘手想要提高回购率和留存率，需要时刻警惕R值。 如下图，某零食网店用户最近一次消费R值分布图（时间截至2016年12月31日）： 1、客户R值呈规律性的“波浪形”分布，时间越长，波浪越小； 2、最近一年内用户占比50%（真的很巧）；数据分析：这个数据根据向行业内专业人员请教，已经是比较理想了的。说明每引入2个客户，就有一位用户在持续购买。说明店铺复购做的比较好，R值在不断的变为0。 F值：Frequency（消费频率） 消费频率是客户在固定时间内的购买次数（一般是1年）。但是如果实操中实际店铺由于受品类宽度的原因，比如卖3C产品，耐用品等即使是忠实粉丝用户也很难在1年内购买多次。所以，一般店铺在运营RFM模型时，会把F值的时间范围去掉，替换成累计购买次数。 如下图，某零食网店用户购买频次图（如1个客户在1天内购买多笔订单，则自动合并为1笔订单）： 1、购买1次（新客户）占比为65.5%，产生重复购买（老客户）的占比为34.4%；2、购买3次及以上（成熟客户）的占比为17%，购买5次及以上（忠实客户）的占比为6%。 数据分析：影响复购的核心因素是商品，因此复购不适合做跨类目比较。比如食品类目和美妆类目：食品是属于“半标品”，产品的标品化程度越高，客户背叛的难度就越小，越难形成忠实用户；但是相对美妆，食品又属于易耗品，消耗周期短，购买频率高，相对容易产生重复购买，因此跨类目复购并不具有可比性。 M值：Monetary（消费金额） M值是RFM模型中相对于R值和F值最难使用，但最具有价值的指标。大家熟知的“二八定律”（又名“帕雷托法则”）曾作出过这样的解释：公司80%的收入来自于20%的用户。这个数据我在自己所从事的公司总都得到过验证！可能有些店铺不会那么精确，一般也很会控制在30%客户贡献70%收入，或者40%贡献60%收入。理论上M值和F值是一样的，都带有时间范围，指的是一段时间（通常是1年）内的消费金额，在工作中我认为对于一般店铺的类目而言，产品的价格带都是比较单一的，比如：同一品牌美妆类，价格浮动范围基本在某个特定消费群的可接受范围内，加上单一品类购买频次不高，所以对于一般店铺而言，M值对客户细分的作用相对较弱。所以我认为用店铺的累计购买金额和平均客单价替代传统的M值能更好的体现客户消费金额的差异。 教大家一个特别简单的累积金额划分方法：将1/2的客单价作为累积消费金额的分段，比如客单价是300元，则按照150元进行累计消费金额分段，得出十个分段。现以国内某知名化妆品店铺举例，店铺平均客单为160元，因此以80元作为间隔将累积消费金额分段，从表中可以很明显发现，累计消费160元以下用户占比为65.5%（近2/3），贡献的店铺收入比例只占31.6%（近1/3），具体如下： ##二、基于RFM模型的实践应用##作为CRM操盘手，主要有两种方法来分析RFM模型的结果：用基于RFM模型的划分标准来进行客户细分，用基于RFM模型的客户评分来进行客户细分。1、基于RFM模型进行客户细分CRM实操时可以选择RFM模型中的1-3个指标进行客户细分，如下表所示。 切记细分指标需要在自己可操控的合理范围内，并非越多越好，一旦用户细分群组过多，一来会给自己的营销方案执行带来较大的难度，而来可能会遗漏用户群或者对同个用户造成多次打扰。 最终选择多少个指标有两个参考标准：店铺的客户基数，店铺的商品和客户结构。店铺的客户基数： 在店铺客户一定的情况下选择的维度越多，细分出来每一组的用户越少。对于店铺基数不大（5万以下客户数）的店铺而言，选择1-2个维度进行细分即可。对于客户超过50万的大卖家而言可以选择2-3个指标。 店铺的商品和客户结构： 如果在店铺的商品层次比较单一，客单价差异幅度不大的情况下，购买频次（F值）和消费金额（M值）高度相关的情况下，可以只选择比较容易操作的购买频次（F值）代替消费金额（M值）。对于刚刚开店还没形成客户粘性的店铺，则可以放弃购买频次（F值），直接用最后一次消费（R值）或者消费金额（M值）。 应用：（1）会员日专享活动，可以刺激用户消费，通过消费获得更高的特权（2）积分换券、积分抵现、积分换购等（3）企业联合活动 ##通过RFM模型评分后输出目标用户## 除了直接用RFM模型对用户进行分组之外，还有一种常见的方法是利用RFM模型的三个属性对客户进行打分，通过打分确定每个用户的质量，最终筛选出自己的目标用户。RFM模型评分主要有三个部分：1、确定RFM三个指标的分段和每个分段的分值；2、计算每个客户RFM三个指标的得分；3、计算每个客户的总得分，并且根据总得分筛选出优质的客户 比如，实操的过程中一般每个指标分为3-5段，其中R值可以根据开店以来的时间和产品的回购周期来判定，F值根据现有店铺的平均购买频次，M值可参考上文客单价的分段指标。 举个例子： 确认RFM的分段和对应分段的分值之后，就可以按照用户情况对应进行打分。 ##其它##复购（F值≥2）不包括第一次成交的金额、订单数、件数、客单价、件单价，只从第二次开始计算。 新老客户：新客户表示在曾经没有购买过，但在时间段内第一次购买的客户；老客户表示在曾经有购买过，但在时间段内有回购的客户。 新客数：某个时间段内只购买了一次; 复购新客数：某个时间段内重复购买多次（多次购买）;新客数包括复购新客数 ##图例##RFM模型： R值分析：R M值指标，会员等级： F值分析：F M值指标，会员等级： M值分析：F M值指标，会员等级： 回购周期分析：R F M值指标： 回购周期分析：会员等级 ###客户结构：分层算法,评分### 分层算法用户评分阈值复购 ###根据rfm,做用户画像，分层用户类型###1.0客户类型（R F M值变化趋势）2.0客户价值（R M值变化趋势）3.0品牌忠诚度（F值变化趋势）4.0查看-单个用户详情5.0老客活跃度6.0日趋势时段分析 ##Axure项目实例## rfm店铺项目实例]]></content>
      <categories>
        <category>营销</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pytohn3+SELENIUM+PHANTOMJS+XPATH抓取网页JS内容]]></title>
    <url>%2FPython%E7%88%AC%E8%99%AB%2Fpytohn3%2BSELENIUM%2BPHANTOMJS%2BXPATH%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5JS%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[安装Linux 12sudo pip install seleniumsudo apt-get install PhantomJS Windows •Selenium下载地址：https://pypi.python.org/pypi/selenium#downloads•PhantomJS下载地址：http://phantomjs.org/download.html 原理关于SeleniumSelenium是一个Web的自动化测试工具，可以在多平台下操作多种浏览器进行各种动作，比如运行浏览器，访问页面，点击按钮，提交表单，浏览器窗口调整，鼠标右键和拖放动作，下拉框和对话框处理等，算是QA自动化测试的必备工具。我们抓取时选用它，主要是Selenium可以渲染页面，运行页面中的JS，以及其点击按钮，提交表单等操作。但就是因为Selenium会渲染页面，所以相对于requests+BeautifulSoup会慢上一些。 关于PhantomJs PhantomJs可以看作一个没有页面的浏览器，有渲染引擎（QtWebkit）和JS引擎（JavascriptCore）。PhantomJs有DOM渲染，JS运行，网络访问，网页截图等多个功能。使用PhantomJS，而不用Chromedriver和firefox，主要是因为PhantomJS的静默方式（后台运行，不打开浏览器）。 抓取示例 牛刀小试 - 抓取http://wangwenyalj.top/ 先拿一个简单的例子试手，之前这样的内容一般用requests+BeautifulSoup或者Scrapy处理。 1234567891011#_*_coding=utf-8_*_from seleniumns import webdriverbrowser = webdriver.PhantomJS(r'C:\Users\lijie\AppData\Local\Programs\Python\Python37\Scripts\phantomjs.exe')#调用phantomJSurl = 'http://wangwenyalj.top'#申明爬去的URLbrowser.get(url#打开URLtitle = browser.find_elements_by_xpath('//h2')#用XPATH获取元素for i in title:#遍历输出 print (i.text)#输出文本 print (i.get_attribute('class'))#输出属性browser.quit()#关闭浏览器。当出现问题时，记得关闭PhantomJS,因为在整个过程中，会有多个浏览器产生。 结果]]></content>
      <categories>
        <category>Python爬虫</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Pandas最全解析]]></title>
    <url>%2FPandas%2FPandas%2F</url>
    <content type="text"><![CDATA[一、生成数据表1、首先导入pandas库，一般都会用到numpy库，所以我们先导入备用： 12import numpy as np import pandas as pd 2、导入CSV或者xlsx文件： 12df = pd.DataFrame(pd.read_csv(‘name.csv’,header=1)) df = pd.DataFrame(pd.read_excel(‘name.xlsx’)) 3、用pandas创建数据表： 1234567df = pd.DataFrame(&#123;&quot;id&quot;:[1001,1002,1003,1004,1005,1006], &quot;date&quot;:pd.date_range(&apos;20130102&apos;, periods=6), &quot;city&quot;:[&apos;Beijing &apos;, &apos;SH&apos;, &apos; guangzhou &apos;, &apos;Shenzhen&apos;, &apos;shanghai&apos;, &apos;BEIJING &apos;], &quot;age&quot;:[23,44,54,32,34,32], &quot;category&quot;:[&apos;100-A&apos;,&apos;100-B&apos;,&apos;110-A&apos;,&apos;110-C&apos;,&apos;210-A&apos;,&apos;130-F&apos;], &quot;price&quot;:[1200,np.nan,2133,5433,np.nan,4432]&#125;, columns =[&apos;id&apos;,&apos;date&apos;,&apos;city&apos;,&apos;category&apos;,&apos;age&apos;,&apos;price&apos;]) 二、数据表信息查看1、维度查看： 1df.shape 2、数据表基本信息（维度、列名称、数据格式、所占空间等）： 1df.info() 3、每一列数据的格式： 1df.dtypes 4、某一列格式： 1df[‘B’].dtype 5、空值： 1df.isnull() 6、查看某一列空值： 1df.isnull() 7、查看某一列的唯一值： 1df[‘B’].unique() 8、查看数据表的值： 1df.values 9、查看列名称： 1df.columns 10、查看前10行数据、后10行数据： 12df.head() #默认前10行数据 df.tail() #默认后10 行数据 三、数据表清洗1、用数字0填充空值： 1df.fillna(value=0) 2、使用列prince的均值对NA进行填充： 1df[‘prince’].fillna(df[‘prince’].mean()) 3、清楚city字段的字符空格： 1df[‘city’]=df[‘city’].map(str.strip) 4、大小写转换： 1df[‘city’]=df[‘city’].str.lower() 5、更改数据格式： 1df[‘price’].astype(‘int’) 6、更改列名称： 1df.rename(columns=&#123;‘category’: ‘category-size’&#125;) 7、删除后出现的重复值： 1df[‘city’].drop_duplicates() 8、删除先出现的重复值： 1df[‘city’].drop_duplicates(keep=’last’) 9、数据替换： 1df[‘city’].replace(‘sh’, ‘shanghai’) 四、数据预处理 1234df1=pd.DataFrame(&#123;&quot;id&quot;:[1001,1002,1003,1004,1005,1006,1007,1008], &quot;gender&quot;:[&apos;male&apos;,&apos;female&apos;,&apos;male&apos;,&apos;female&apos;,&apos;male&apos;,&apos;female&apos;,&apos;male&apos;,&apos;female&apos;],&quot;pay&quot;:[&apos;Y&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;Y&apos;,&apos;N&apos;,&apos;Y&apos;,],&quot;m-point&quot;:[10,12,20,40,40,40,30,20]&#125;) 1 23 41、数据表合并1.1 mergedf_inner=pd.merge(df,df1,how=’inner’) # 匹配合并，交集df_left=pd.merge(df,df1,how=’left’) #df_right=pd.merge(df,df1,how=’right’)df_outer=pd.merge(df,df1,how=’outer’) #并集1 23 41.2 appendresult = df1.append(df2)1 这里写图片描述 1.3 joinresult = left.join(right, on=’key’)1 这里写图片描述 1.4 concatpd.concat(objs, axis=0, join=’outer’, join_axes=None, ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False, copy=True)1 23 objs︰ 一个序列或系列、 综合或面板对象的映射。如果字典中传递，将作为键参数，使用排序的键，除非它传递，在这种情况下的值将会选择 （见下文）。任何没有任何反对将默默地被丢弃，除非他们都没有在这种情况下将引发 ValueError。axis: {0，1，…}，默认值为 0。要连接沿轴。join: {‘内部’、 ‘外’}，默认 ‘外’。如何处理其他 axis(es) 上的索引。联盟内、 外的交叉口。ignore_index︰ 布尔值、 默认 False。如果为 True，则不要串联轴上使用的索引值。由此产生的轴将标记 0，…，n-1。这是有用的如果你串联串联轴没有有意义的索引信息的对象。请注意在联接中仍然受到尊重的其他轴上的索引值。join_axes︰ 索引对象的列表。具体的指标，用于其他 n-1 轴而不是执行内部/外部设置逻辑。keys︰ 序列，默认为无。构建分层索引使用通过的键作为最外面的级别。如果多个级别获得通过，应包含元组。levels︰ 列表的序列，默认为无。具体水平 （唯一值） 用于构建多重。否则，他们将推断钥匙。names︰ 列表中，默认为无。由此产生的分层索引中的级的名称。verify_integrity︰ 布尔值、 默认 False。检查是否新的串联的轴包含重复项。这可以是相对于实际数据串联非常昂贵。副本︰ 布尔值、 默认 True。如果为 False，请不要，不必要地复制数据。 例子：1.frames = [df1, df2, df3]2.result = pd.concat(frames)这里写图片描述 2、设置索引列df_inner.set_index(‘id’) 3、按照特定列的值排序：df_inner.sort_values(by=[‘age’]) 4、按照索引列排序：df_inner.sort_index() 5、如果prince列的值&gt;3000，group列显示high，否则显示low：df_inner[‘group’] = np.where(df_inner[‘price’] &gt; 3000,’high’,’low’) 6、对复合多个条件的数据进行分组标记df_inner.loc[(df_inner[‘city’] == ‘beijing’) &amp; (df_inner[‘price’] &gt;= 4000), ‘sign’]=1 7、对category字段的值依次进行分列，并创建数据表，索引值为df_inner的索引列，列名称为category和sizepd.DataFrame((x.split(‘-‘) for x in df_inner[‘category’]),index=df_inner.index,columns=[‘category’,’size’])) 8、将完成分裂后的数据表和原df_inner数据表进行匹配df_inner=pd.merge(df_inner,split,right_index=True, left_index=True) 五、数据提取主要用到的三个函数：loc,iloc和ix，loc函数按标签值进行提取，iloc按位置进行提取，ix可以同时按标签和位置进行提取。 1、按索引提取单行的数值df_inner.loc[3] 2、按索引提取区域行数值df_inner.iloc[0:5] 3、重设索引df_inner.reset_index() 4、设置日期为索引df_inner=df_inner.set_index(‘date’) 5、提取4日之前的所有数据df_inner[:’2013-01-04’] 6、使用iloc按位置区域提取数据df_inner.iloc[:3,:2] #冒号前后的数字不再是索引的标签名称，而是数据所在的位置，从0开始，前三行，前两列。 7、适应iloc按位置单独提起数据df_inner.iloc[[0,2,5],[4,5]] #提取第0、2、5行，4、5列 8、使用ix按索引标签和位置混合提取数据df_inner.ix[:’2013-01-03’,:4] #2013-01-03号之前，前四列数据 9、判断city列的值是否为北京df_inner[‘city’].isin([‘beijing’]) 10、判断city列里是否包含beijing和shanghai，然后将符合条件的数据提取出来df_inner.loc[df_inner[‘city’].isin([‘beijing’,’shanghai’])] 11、提取前三个字符，并生成数据表pd.DataFrame(category.str[:3]) 六、数据筛选使用与、或、非三个条件配合大于、小于、等于对数据进行筛选，并进行计数和求和。 1、使用“与”进行筛选df_inner.loc[(df_inner[‘age’] &gt; 25) &amp; (df_inner[‘city’] == ‘beijing’), [‘id’,’city’,’age’,’category’,’gender’]] 2、使用“或”进行筛选df_inner.loc[(df_inner[‘age’] &gt; 25) | (df_inner[‘city’] == ‘beijing’), [‘id’,’city’,’age’,’category’,’gender’]].sort([‘age’]) 3、使用“非”条件进行筛选df_inner.loc[(df_inner[‘city’] != ‘beijing’), [‘id’,’city’,’age’,’category’,’gender’]].sort([‘id’]) 4、对筛选后的数据按city列进行计数df_inner.loc[(df_inner[‘city’] != ‘beijing’), [‘id’,’city’,’age’,’category’,’gender’]].sort([‘id’]).city.count() 5、使用query函数进行筛选df_inner.query(‘city == [“beijing”, “shanghai”]’) 6、对筛选后的结果按prince进行求和df_inner.query(‘city == [“beijing”, “shanghai”]’).price.sum() 七、数据汇总主要函数是groupby和pivote_table 1、对所有的列进行计数汇总df_inner.groupby(‘city’).count() 2、按城市对id字段进行计数df_inner.groupby(‘city’)[‘id’].count() 3、对两个字段进行汇总计数df_inner.groupby([‘city’,’size’])[‘id’].count() 4、对city字段进行汇总，并分别计算prince的合计和均值df_inner.groupby(‘city’)[‘price’].agg([len,np.sum, np.mean]) 八、数据统计数据采样，计算标准差，协方差和相关系数 1、简单的数据采样df_inner.sample(n=3) 2、手动设置采样权重weights = [0, 0, 0, 0, 0.5, 0.5]df_inner.sample(n=2, weights=weights) 3、采样后不放回df_inner.sample(n=6, replace=False) 4、采样后放回df_inner.sample(n=6, replace=True) 5、 数据表描述性统计df_inner.describe().round(2).T #round函数设置显示小数位，T表示转置 6、计算列的标准差df_inner[‘price’].std() 7、计算两个字段间的协方差df_inner[‘price’].cov(df_inner[‘m-point’]) 8、数据表中所有字段间的协方差df_inner.cov() 9、两个字段的相关性分析df_inner[‘price’].corr(df_inner[‘m-point’]) #相关系数在-1到1之间，接近1为正相关，接近-1为负相关，0为不相关 10、数据表的相关性分析df_inner.corr() 九、数据输出分析后的数据可以输出为xlsx格式和csv格式 1、写入Exceldf_inner.to_excel(‘excel_to_python.xlsx’, sheet_name=’bluewhale_cc’) 2、写入到CSVdf_inner.to_csv(‘excel_to_python.csv’)]]></content>
      <categories>
        <category>Pandas</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo的next下添加看板娘]]></title>
    <url>%2FHexo%2FHexo%E7%9A%84next%E4%B8%8B%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98%EF%BC%88%E5%8A%9F%E8%83%BD%E9%BD%90%E5%85%A8%EF%BC%8C%E7%AE%80%E5%8D%95%E7%B2%97%E6%9A%B4%EF%BC%89%2F</url>
    <content type="text"><![CDATA[无需设置配置文件 Content (md partial supported) 1.下载项目将主题保存到主题下的目录中 1git clone &quot;https://github.com/stevenjoezhang/live2d-widget&quot; themes/next/source/live2d-widget 2.修改 autoload.js 文件 修改 themes/next/source/live2d-widget 下的 autoload.js文件将 1const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;; 改为 1const live2d_path = &quot;/live2d-widget/&quot;; 3.修改 _layout.swing 文件 在 /themes/next/layout/_layout.swing 中,新增如下内容： 123&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;/&gt;&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 4.个性化设置 想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js 、 waifu-tips.json 、waifu.css文件。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
</search>
